*-------------------------------------------------------*
*	Macros for planar mode drawing			*	
*-------------------------------------------------------*

setpix1	macro	mask,data,temp
	ifeq	both
	 ifeq	get
	and.l		\1,(a0)
	or.l		\2,(a0)+
	 endc
	 ifne	get
	move.l		(a0),\3
	and.l		\1,\3
	or.l		\2,\3
	move.l		\3,(a0)+
	 endc
	endc

	ifne	both
	 ifeq	get
	and.l		\1,(a4)
	or.l		\2,(a4)
	  ifeq	longs
	move.w		(a4)+,(a0)+
	  endc
	  ifne	longs
	move.l		(a4)+,(a0)+
	  endc
	 endc
	 ifne	get
	move.l		(a4),\3
	and.l		\1,\3
	or.l		\2,\3
	  ifeq	longs
	move.l		\3,(a4)
	move.w		(a4)+,(a0)+
	  endc
	  ifne	longs
	move.l		\3,(a4)+
	move.l		\3,(a0)+
	  endc
	 endc
	endc
	endm

setpix2	macro	mask,data,temp
	ifeq	both
	 ifeq	get
	and.l		\1,(a0)
	or.l		\2,(a0)+
	 endc
	 ifne	get
	move.l		(a0),\3
	and.l		\1,\3
	or.l		\2,\3
	move.l		\3,(a0)+
	 endc
	endc

	ifne	both
	 ifeq	longs
	move.w		(a4)+,(a0)+
	 endc
	 ifeq	get
	and.l		\1,(a4)
	or.l		\2,(a4)
	  ifeq	longs
	move.w		(a4)+,(a0)+
	  endc
	  ifne	longs
	move.l		(a4)+,(a0)+
	  endc
	 endc
	 ifne	get
	move.l		(a4),\3
	and.l		\1,\3
	or.l		\2,\3
	  ifeq	longs
	move.l		\3,(a4)
	move.w		(a4)+,(a0)+
	  endc
	  ifne	longs
	move.l		\3,(a4)+
	move.l		\3,(a0)+
	  endc
	 endc
	endc
	endm

setpix3	macro	mask,data,temp
	ifeq	both
	 ifeq	get
	and.l		\1,(a0)
	or.l		\2,(a0)+
	 endc
	 ifne	get
	move.l		(a0),\3
	and.l		\1,\3
	or.l		\2,\3
	move.l		\3,(a0)+
	 endc
	endc

	ifne	both
	 ifeq	longs
	move.w		(a4)+,(a0)+
	 endc
	 ifeq	get
	and.l		\1,(a4)
	or.l		\2,(a4)
	  ifeq	longs
	move.w		(a4)+,(a0)+
	  endc
	  ifne	longs
	move.l		(a4)+,(a0)+
	  endc
	 endc
	 ifne	get
	move.l		(a4),\3
	and.l		\1,\3
	or.l		\2,\3
	  ifeq	longs
	move.l		\3,(a4)
	move.w		(a4)+,(a0)+
	move.w		(a4)+,(a0)+
	  endc
	  ifne	longs
	move.l		\3,(a4)+
	move.l		\3,(a0)+
	  endc
	 endc
	endc
	endm

setpix4	macro		mask,data,temp
	and.l		\1,\3
	or.l		\2,\3
	ifeq	both
	move.l		\3,(a0)+
	endc
	ifne	both
	 ifeq	longs
	move.l		\3,(a4)
	move.w		(a4)+,(a0)+
	 endc
	 ifne	longs
	move.l		\3,(a4)+
	move.l		\3,(a0)+
	 endc
	endc
	endm

setpix5	macro		mask,data,temp
	and.l		\1,\3
	or.l		\2,\3
	ifeq	both
	move.l		\3,(a0)+
	endc
	ifne	both
	 ifeq	longs
	move.w		(a4)+,(a0)+
	 endc
	 ifeq	longs
	move.l		\3,(a4)
	move.w		(a4)+,(a0)+
	 endc
	 ifne	longs
	move.l		\3,(a4)+
	move.l		\3,(a0)+
	 endc
	endc
	endm



label	macro	name
	ifeq	shadow
mfdb_\1:
	else
shadow_\1:
	endc
	endm

jump	macro	type,name
	ifeq	shadow
	\1	mfdb_\2
	else
	\1	shadow_\2
	endc
	endm


RandorW	macro
	ifeq	both
	move.w		(a1),d4
	endc
	ifne	both
	move.w		(a4),d4
	endc
	and.w		d6,d4
	or.w		d7,d4
	ifeq	both
	move.w		d4,(a1)+
	endc
	ifne	both
	move.w		d4,(a4)+
	move.w		d4,(a1)+
	endc
	endm

RorW	macro
	ifeq	both
	move.w		(a1),d4
	endc
	ifne	both
	move.w		(a4),d4
	endc
	or.w		d7,d4
	ifeq	both
	move.w		d4,(a1)+
	endc
	ifne	both
	move.w		d4,(a4)+
	move.w		d4,(a1)+
	endc
	endm

RandW	macro
	ifeq	both
	move.w		(a1),d4
	endc
	ifne	both
	move.w		(a4),d4
	endc
	and.w		d7,d4
	ifeq	both
	move.w		d4,(a1)+
	endc
	ifne	both
	move.w		d4,(a4)+
	move.w		d4,(a1)+
	endc
	endm

ReorW	macro
	ifeq	both
	move.w		(a1),d4
	endc
	ifne	both
	move.w		(a4),d4
	endc
	eor.w		d7,d4
	ifeq	both
	move.w		d4,(a1)+
	endc
	ifne	both
	move.w		d4,(a4)+
	move.w		d4,(a1)+
	endc
	endm

RandorWl	macro
	ifeq	both
	move.w		(a1),d4
	endc
	ifne	both
	move.w		(a4),d4
	endc
	and.w		d6,d4
	or.w		d7,d4
	ifeq	both
	move.w		d4,(a1)
	endc
	ifne	both
	move.w		d4,(a4)
	move.w		d4,(a1)
	endc
	endm

RorWl	macro
	ifeq	both
	move.w		(a1),d4
	endc
	ifne	both
	move.w		(a4),d4
	endc
	or.w		d7,d4
	ifeq	both
	move.w		d4,(a1)
	endc
	ifne	both
	move.w		d4,(a4)
	move.w		d4,(a1)
	endc
	endm

RandWl	macro
	ifeq	both
	move.w		(a1),d4
	endc
	ifne	both
	move.w		(a4),d4
	endc
	and.w		d7,d4
	ifeq	both
	move.w		d4,(a1)
	endc
	ifne	both
	move.w		d4,(a4)
	move.w		d4,(a1)
	endc
	endm

ReorWl	macro
	ifeq	both
	move.w		(a1),d4
	endc
	ifne	both
	move.w		(a4),d4
	endc
	eor.w		d7,d4
	ifeq	both
	move.w		d4,(a1)
	endc
	ifne	both
	move.w		d4,(a4)
	move.w		d4,(a1)
	endc
	endm

nopW	macro
	ifeq	both
	move.w		d7,(a1)+
	endc
	ifne	both
	move.w		d7,(a4)+
	move.w		d7,(a1)+
	endc
	endm


opmWw	macro
	ifeq	both
	move.w		(a1),d4
	endc
	ifne	both
	move.w		(a4),d4
	endc
	jsr		(a6)
	ifeq	both
	move.w		d4,(a1)+
	endc
	ifne	both
	move.w		d4,(a4)+
	move.w		d4,(a1)+
	endc
	endm

opWl	macro
	ifeq	both
	move.l		(a1),d4
	endc
	ifne	both
	move.l		(a4),d4
	endc
	jsr		12(a6)
	ifeq	both
	move.l		d4,(a1)+
	endc
	ifne	both
	move.l		d4,(a4)+
	move.l		d4,(a1)+
	endc
	endm

opmWlr	macro		dst,shadow,v,tmp,mask
	ifeq	both
	move.l		(a1),\4
	endc
	ifne		both
	move.l		(a4),\4
	endc
	jsr		(a6)
	ifeq	both
	move.l		\4,(a1)+
	endc
	ifne	both
	move.l		\4,(a4)+
	move.l		\4,(a1)+
	endc
	endm

opWlr	macro		dst,shadow,v,tmp
	ifeq	both
	move.l		(a1),\4
	endc
	ifne		both
	move.l		(a4),\4
	endc
	jsr		12(a6)
	ifeq	both
	move.l		\4,(a1)+
	endc
	ifne	both
	move.l		\4,(a4)+
	move.l		\4,(a1)+
	endc
	endm

nopmWlr	macro		dst,shadow,v,tmp,mask
	ifeq	both
	move.l		(\1),\4
	endc
	ifne		both
	move.l		(\2),\4
	endc
	eor.l		\4,\3
	and.l		\5,\3
	eor.l		\4,\3
	ifeq	both
	move.l		\3,(\1)+
	endc
	ifne	both
	move.l		\3,(\2)+
	move.l		\3,(\1)+
	endc
	endm

nopmWlrs	macro		dst,shadow,v,tmp,mask
	ifeq	both
	move.l		(\1),\4
	endc
	ifne		both
	move.l		(\2),\4
	endc
	eor.l		\4,\3
	and.l		\5,\3
	eor.l		\4,\3

	ifne	smartdraw
	cmp.l		(\2),\3
	bne		\@1
	addq.l		#4,\2
	addq.l		#4,\1
	bra		\@2
.\@1:
	endc
	ifeq	both
	move.l		\3,(\1)+
	endc
	ifne	both
	move.l		\3,(\2)+
	move.l		\3,(\1)+
	endc
.\@2:
	endm

nopWlr	macro		dst,shadow,v
	ifeq	both
	move.l		\3,(\1)+
	endc
	ifne	both
	move.l		\3,(\2)+
	move.l		\3,(\1)+
	endc
	endm

nopWlrs	macro		dst,shadow,v,delta
	ifne	smartdraw
	ifne	0
	cmp.l		\4(\2),\3
	bne		\@1
	addq.l		#4,\1
	bra		\@2
.\@1:
;	move.l		\3,(\2)+
;	move.l		\3,a3
	move.l		\3,\4(\2)
	move.l		\3,(\1)+
;	move.l		\3,\4(\1)
.\@2:
	endc
	ifeq	0
	cmp.l		\4(\2),\3
	beq		\@2
.\@1:
	move.l		\3,\4(\2)
	move.l		\3,(\1)
.\@2:
	addq.l		#4,\1
	endc
	endc
	ifeq	smartdraw
;	move.l		\3,(\2)+
;	move.l		\3,a3
	ifne	both
	move.l		\3,\4(\2)
	move.l		\3,(\1)+
	endc
	ifeq	both
	move.l		\3,(\1)+
	endc
;	move.l		\3l,\4(\1)
	endc
	endm
